generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  email    String  @unique
  username String  @unique
  password String?

  firstName           String
  lastName            String
  bio                 String?
  profileImage        String?
  introductionTitle   String?
  introductionSummary String?
  social              Json?

  articles Article[] @relation("UserArticles")
  projects Project[] @relation("UserProjects")

  accounts Account[]
  sessions Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Article {
  id           String  @id @default(cuid())
  title        String
  slug         String  @unique
  htmlContent  String
  featureImage String?

  authorId String
  author   User   @relation("UserArticles", fields: [authorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id           String  @id @default(cuid())
  title        String
  slug         String  @unique
  htmlContent  String
  featureImage String?

  authorId String
  author   User   @relation("UserProjects", fields: [authorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
